plugins {
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.micronaut.application") version "1.3.4"
}

version = "0.1"
group = "micronaut.person"

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://oss.jfrog.org/oss-snapshot-local" }
}

configurations {
    all {
        resolutionStrategy {
            //force 'com.graphql-java:graphql-java:15.0'
            eachDependency { DependencyResolveDetails details ->
                // specifying a fixed version for all libraries with 'io.micronaut.data' group
                if (details.requested.group == 'io.micronaut.data') {
                    details.useVersion micronautDataVersion
                }
            }
        }
    }
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("micronaut.person.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-client")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.graphql:micronaut-graphql")
    //implementation("com.graphql-java:graphql-java-extended-scalars:1.0.1")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")

    testImplementation("org.testcontainers:testcontainers")
    testImplementation("org.testcontainers:junit-jupiter")
}


application {
    mainClass.set("micronaut.person.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("1.8")
    targetCompatibility = JavaVersion.toVersion("1.8")
}

nativeImage {
    imageName("data-jpa-mariadb")
    args = ["-H:+StaticExecutableWithDynamicLibC"]
}

