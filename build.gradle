plugins {
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "io.micronaut.application" version "1.2.0"
}

version "0.1"
group "micronaut.person"

repositories {
    mavenCentral()
    jcenter()
}


micronaut {
    runtime("lambda")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("micronaut.person.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    compileOnly("org.graalvm.nativeimage:svm")
    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    //implementation("io.micronaut.aws:micronaut-function-aws-api-proxy")
    implementation("io.micronaut.aws:micronaut-function-aws-custom-runtime")
    implementation("io.micronaut.graphql:micronaut-graphql")
    implementation("com.graphql-java:graphql-java-extended-scalars:1.0.1")
    implementation("com.fasterxml.jackson.core:jackson-annotations:2.12.0")


    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
    testImplementation("io.micronaut:micronaut-http-client")
    testRuntimeOnly("org.testcontainers:mariadb")
}

application {
    mainClass.set("io.micronaut.function.aws.runtime.MicronautLambdaRuntime")
}

java {
    sourceCompatibility = JavaVersion.toVersion('1.8')
    targetCompatibility = JavaVersion.toVersion('1.8')
}
